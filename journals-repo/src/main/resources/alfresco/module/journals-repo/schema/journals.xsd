<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema elementFormDefault="qualified" version="1.0" targetNamespace="http://www.citeck.ru/ecos/journals/1.0"
           xmlns:j="http://www.citeck.ru/ecos/journals/1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:inv="http://www.citeck.ru/ecos/invariants/1.0">

    <xs:import namespace="http://www.citeck.ru/ecos/invariants/1.0" schemaLocation="invariants.xsd" />

    <!--
        Generate classes with:
        xjc -no-header alfresco/module/idocs-repo/schema/journals.xsd
        invariants.xsd should be near this file
     -->

    <xs:element name="journals">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="imports" minOccurs="0">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="import" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:attribute name="uri" type="xs:string" use="required" />
                                    <xs:attribute name="prefix" type="xs:string" use="required" />
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="journal" type="j:journal" maxOccurs="unbounded" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="predicate">
        <xs:simpleContent>
            <xs:extension base="xs:string" />
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="createVariants">
        <xs:sequence>
            <xs:element name="variant" type="j:createVariant" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="createVariant">
        <xs:sequence>
            <xs:element name="recordRef" type="xs:string" />
            <xs:element name="formKey" type="xs:string" minOccurs="0" />
            <xs:element name="attribute" type="j:option" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="title" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType name="formatter">
        <xs:sequence>
            <xs:element name="param" type="j:option" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType name="groupBy">
        <xs:simpleContent>
            <xs:extension base="xs:string" />
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="groupAction">
        <xs:sequence>
            <xs:element name="param" type="j:option" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="evaluator" type="j:evaluator" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="title" type="xs:string" use="required" />
        <xs:attribute name="type" type="j:groupActionType" default="selected" />
    </xs:complexType>
    
    <xs:complexType name="action">
        <xs:attribute name="ref" type="xs:string"/>
    </xs:complexType>

    <xs:simpleType name="groupActionType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="selected" />
            <xs:enumeration value="filtered" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="journal">
        <xs:sequence>
            <xs:element name="datasource" type="xs:string" minOccurs="0" />
            <xs:element name="predicate" type="j:predicate" minOccurs="0" />
            <xs:element name="create" type="j:createVariants" minOccurs="0" />
            <xs:element name="group-by" type="j:groupBy" minOccurs="0" />
            <xs:element name="option" type="j:option" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="actions" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="action" type="j:action" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="group-actions" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="action" type="j:groupAction" maxOccurs="unbounded" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="headers">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="header" type="j:header" minOccurs="1" maxOccurs="unbounded" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType name="option">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name" type="xs:string" use="required" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:simpleType name="logicJoinType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="OR" />
            <xs:enumeration value="AND" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="evaluator">
        <xs:sequence>
            <xs:element name="param" type="j:option" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="evaluator" type="j:evaluator" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="optional" />
        <xs:attribute name="joinBy" type="j:logicJoinType" use="optional" />
    </xs:complexType>

    <xs:complexType name="batchEdit">
        <xs:sequence>
            <xs:element name="param" type="j:option" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="evaluator" type="j:evaluator" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="title" type="xs:string" use="optional" />
    </xs:complexType>

    <xs:complexType name="viewElement">
        <xs:sequence>
            <xs:element name="param" type="j:option" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="template" type="xs:string" />
    </xs:complexType>

    <xs:complexType name="criterionRegion">
        <xs:complexContent>
            <xs:extension base="j:viewElement">
                <xs:attribute name="name" type="xs:string" use="required" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="criterion">
        <xs:complexContent>
            <xs:extension base="j:viewElement">
                <xs:sequence>
                    <xs:element name="region" type="j:criterionRegion" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="invariant" type="inv:invariant" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="header">
        <xs:sequence>
            <xs:element name="formatter" type="j:formatter" minOccurs="0" />
            <xs:element name="option" type="j:option" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="batch-edit" type="j:batchEdit" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="criterion" type="j:criterion" minOccurs="0" />
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required" />
        <xs:attribute name="default" type="xs:boolean" default="false" />
        <xs:attribute name="visible" type="xs:boolean" default="true" />
        <xs:attribute name="searchable" type="xs:boolean" default="true" />
        <xs:attribute name="sortable" type="xs:boolean" default="true" />
        <xs:attribute name="groupable" type="xs:boolean" default="false" />
    </xs:complexType>

</xs:schema>

